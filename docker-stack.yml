services:
  elasticsearch1:
    image: "docker.elastic.co/elasticsearch/elasticsearch:${ELASTIC_VERSION:-9.0.3}"
    volumes:
      - elasticsearch1:/usr/share/elasticsearch/data:Z
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      node.name: elasticsearch1
      cluster.name: docker-cluster
      node.roles: master,data,ingest,remote_cluster_client
      discovery.seed_hosts: elasticsearch2,elasticsearch3
      cluster.initial_master_nodes: elasticsearch1,elasticsearch2,elasticsearch3
      network.host: 0.0.0.0
      network.publish_host: elasticsearch1
      transport.host: 0.0.0.0
      transport.publish_host: elasticsearch1
      transport.publish_port: 9300
      xpack.security.enabled: "true"
      xpack.security.http.ssl.enabled: "true"
      xpack.security.http.ssl.key: /usr/share/elasticsearch/config/elasticsearch.key
      xpack.security.http.ssl.certificate: /usr/share/elasticsearch/config/elasticsearch.crt
      xpack.security.http.ssl.certificate_authorities: /usr/share/elasticsearch/config/ca.crt
      xpack.security.transport.ssl.enabled: "true"
      xpack.security.transport.ssl.verification_mode: certificate
      xpack.security.transport.ssl.key: /usr/share/elasticsearch/config/elasticsearch.key
      xpack.security.transport.ssl.certificate: /usr/share/elasticsearch/config/elasticsearch.crt
      xpack.security.transport.ssl.certificate_authorities: /usr/share/elasticsearch/config/ca.crt
      xpack.license.self_generated.type: basic
      xpack.monitoring.collection.enabled: "false"
      ES_JAVA_OPTS: "-Xms4g -Xmx4g"
      ELASTIC_PASSWORD: "${ELASTIC_PASSWORD:-}"
    secrets:
      - source: elk_ca_crt
        target: /usr/share/elasticsearch/config/ca.crt
      - source: elk_elasticsearch_crt
        target: /usr/share/elasticsearch/config/elasticsearch.crt
      - source: elk_elasticsearch_key
        target: /usr/share/elasticsearch/config/elasticsearch.key
    networks:
      - elk
    deploy:
      replicas: 1
      placement:
        max_replicas_per_node: 1
        constraints:
          - node.labels.elasticsearch1 == true
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 120s

  elasticsearch2:
    image: "docker.elastic.co/elasticsearch/elasticsearch:${ELASTIC_VERSION:-9.0.3}"
    volumes:
      - elasticsearch2:/usr/share/elasticsearch/data:Z
    environment:
      node.name: elasticsearch2
      cluster.name: docker-cluster
      node.roles: master,data,ingest
      discovery.seed_hosts: elasticsearch1,elasticsearch3
      cluster.initial_master_nodes: elasticsearch1,elasticsearch2,elasticsearch3
      network.host: 0.0.0.0
      network.publish_host: elasticsearch2
      transport.host: 0.0.0.0
      transport.publish_host: elasticsearch2
      transport.publish_port: 9300
      xpack.security.enabled: "true"
      xpack.security.http.ssl.enabled: "true"
      xpack.security.http.ssl.key: /usr/share/elasticsearch/config/elasticsearch.key
      xpack.security.http.ssl.certificate: /usr/share/elasticsearch/config/elasticsearch.crt
      xpack.security.http.ssl.certificate_authorities: /usr/share/elasticsearch/config/ca.crt
      xpack.security.transport.ssl.enabled: "true"
      xpack.security.transport.ssl.verification_mode: certificate
      xpack.security.transport.ssl.key: /usr/share/elasticsearch/config/elasticsearch.key
      xpack.security.transport.ssl.certificate: /usr/share/elasticsearch/config/elasticsearch.crt
      xpack.security.transport.ssl.certificate_authorities: /usr/share/elasticsearch/config/ca.crt
      xpack.license.self_generated.type: basic
      xpack.monitoring.collection.enabled: "false"
      ES_JAVA_OPTS: "-Xms4g -Xmx4g"
      ELASTIC_PASSWORD: "${ELASTIC_PASSWORD:-}"
    secrets:
      - source: elk_ca_crt
        target: /usr/share/elasticsearch/config/ca.crt
      - source: elk_elasticsearch_crt
        target: /usr/share/elasticsearch/config/elasticsearch.crt
      - source: elk_elasticsearch_key
        target: /usr/share/elasticsearch/config/elasticsearch.key
    networks:
      - elk
    deploy:
      replicas: 1
      placement:
        max_replicas_per_node: 1
        constraints:
          - node.labels.elasticsearch2 == true
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 120s

  elasticsearch3:
    image: "docker.elastic.co/elasticsearch/elasticsearch:${ELASTIC_VERSION:-9.0.3}"
    volumes:
      - elasticsearch3:/usr/share/elasticsearch/data:Z
    environment:
      node.name: elasticsearch3
      cluster.name: docker-cluster
      node.roles: master,data,ingest
      discovery.seed_hosts: elasticsearch1,elasticsearch2
      cluster.initial_master_nodes: elasticsearch1,elasticsearch2,elasticsearch3
      network.host: 0.0.0.0
      network.publish_host: elasticsearch3
      transport.host: 0.0.0.0
      transport.publish_host: elasticsearch3
      transport.publish_port: 9300
      xpack.security.enabled: "true"
      xpack.security.http.ssl.enabled: "true"
      xpack.security.http.ssl.key: /usr/share/elasticsearch/config/elasticsearch.key
      xpack.security.http.ssl.certificate: /usr/share/elasticsearch/config/elasticsearch.crt
      xpack.security.http.ssl.certificate_authorities: /usr/share/elasticsearch/config/ca.crt
      xpack.security.transport.ssl.enabled: "true"
      xpack.security.transport.ssl.verification_mode: certificate
      xpack.security.transport.ssl.key: /usr/share/elasticsearch/config/elasticsearch.key
      xpack.security.transport.ssl.certificate: /usr/share/elasticsearch/config/elasticsearch.crt
      xpack.security.transport.ssl.certificate_authorities: /usr/share/elasticsearch/config/ca.crt
      xpack.license.self_generated.type: basic
      xpack.monitoring.collection.enabled: "false"
      ES_JAVA_OPTS: "-Xms4g -Xmx4g"
      ELASTIC_PASSWORD: "${ELASTIC_PASSWORD:-}"
    secrets:
      - source: elk_ca_crt
        target: /usr/share/elasticsearch/config/ca.crt
      - source: elk_elasticsearch_crt
        target: /usr/share/elasticsearch/config/elasticsearch.crt
      - source: elk_elasticsearch_key
        target: /usr/share/elasticsearch/config/elasticsearch.key
    networks:
      - elk
    deploy:
      replicas: 1
      placement:
        max_replicas_per_node: 1
        constraints:
          - node.labels.elasticsearch3 == true
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 120s

  kibana:
    image: "docker.elastic.co/kibana/kibana:${ELASTIC_VERSION:-9.0.3}"
    ports:
      - "5601:5601"
    environment:
      KIBANA_SYSTEM_PASSWORD: "${KIBANA_SYSTEM_PASSWORD:-}"
      # ELASTICSEARCH_HOSTS: https://elasticsearch1:9200
      # ELASTICSEARCH_USERNAME: kibana_system
      # ELASTICSEARCH_PASSWORD: "${KIBANA_SYSTEM_PASSWORD:-}"
      # ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES: /usr/share/kibana/config/ca.crt
      # SERVER_SSL_ENABLED: "true"
      # SERVER_SSL_CERTIFICATE: /usr/share/kibana/config/kibana.crt
      # SERVER_SSL_KEY: /usr/share/kibana/config/kibana.key
      # SERVER_NAME: kibana
      # SERVER_HOST: 0.0.0.0
      # TELEMETRY_OPTIN: "false"
      # TELEMETRY_ALLOWCHANGINGOPTINSTATUS: "false"
      # XPACK_APM_TELEMETRYCOLLECTIONENABLED: "false"
      # XPACK_MONITORING_UI__CCS__ENABLED: "false"
      # XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY: 3827bd200c5241863ed08386da2b40f9
      # XPACK_REPORTING_ENCRYPTIONKEY: 78fc59a7ac1348b3d43a161d4c23bef9
      # XPACK_SECURITY_ENCRYPTIONKEY: c97e31c7eb741bb2309ca5a5d798a2fc
      # MONITORING_UI_CONTAINER_ELASTICSEARCH_ENABLED: "false"
      # XPACK_MONITORING_UI_ENABLED: "false"
    configs:
      - source: kibana_yml
        target: /usr/share/kibana/config/kibana.yml
    secrets:
      - source: elk_ca_crt
        target: /usr/share/kibana/config/ca.crt
      - source: elk_kibana_crt
        target: /usr/share/kibana/config/kibana.crt
      - source: elk_kibana_key
        target: /usr/share/kibana/config/kibana.key
    networks:
      - elk
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

  fleet-server:
      image: "docker.elastic.co/elastic-agent/elastic-agent:${ELASTIC_VERSION:-9.0.3}"
      user: root
      entrypoint: >
        bash -c "
          echo 'Waiting for Kibana to be available...';
          until curl -sf --insecure https://kibana:5601/api/status >/dev/null 2>&1; do
            echo 'Kibana not ready yet, waiting 10 seconds...';
            sleep 10;
          done;
          echo 'Kibana is ready, starting Fleet Server...';
          exec elastic-agent container
        "
      depends_on:
        - kibana
        - elasticsearch1
      volumes:
        - fleet-server:/usr/share/elastic-agent/state:Z
        - /var/lib/docker/containers:/var/lib/docker/containers:ro
        - /var/run/docker.sock:/var/run/docker.sock:ro
      secrets:
        - source: elk_ca_crt
          target: /usr/share/elastic-agent/ca.crt
        - source: elk_fleet_crt
          target: /usr/share/elastic-agent/fleet-server.crt
        - source: elk_fleet_key
          target: /usr/share/elastic-agent/fleet-server.key
      environment:
        FLEET_SERVER_ENABLE: '1'
        FLEET_SERVER_HOST: 0.0.0.0
        FLEET_SERVER_PORT: '8220'
        FLEET_SERVER_POLICY_ID: fleet-server-policy
        FLEET_URL: https://fleet-server:8220
        FLEET_SERVER_CERT: /usr/share/elastic-agent/fleet-server.crt
        FLEET_SERVER_CERT_KEY: /usr/share/elastic-agent/fleet-server.key
        FLEET_CA: /usr/share/elastic-agent/ca.crt
        KIBANA_HOST: https://kibana:5601
        KIBANA_CA: /usr/share/elastic-agent/ca.crt
        ELASTICSEARCH_HOST: https://elasticsearch1:9200
        ELASTICSEARCH_CA: /usr/share/elastic-agent/ca.crt
        ELASTICSEARCH_USERNAME: elastic
        ELASTICSEARCH_PASSWORD: ${ELASTIC_PASSWORD:-}
        # Fleet plugin in Kibana
        KIBANA_FLEET_SETUP: '1'
        KIBANA_FLEET_USERNAME: elastic
        KIBANA_FLEET_PASSWORD: ${ELASTIC_PASSWORD:-}
        # Additional Fleet Server settings
        # FLEET_SERVER_SERVICE_TOKEN_PATH: ""
        # FLEET_SERVER_SERVICE_TOKEN: ""
        # FLEET_SERVER_INSECURE: "false"
        # Logging
        FLEET_SERVER_LOG_LEVEL: info
      ports:
        - target: 8220
          published: 8220
          protocol: tcp
          mode: host
      hostname: fleet-server
      networks:
        - elk
      deploy:
        mode: replicated
        replicas: 1
        placement:
          constraints:
            - node.role == manager
        update_config:
          parallelism: 1
          delay: 10s
          order: start-first
        restart_policy:
          condition: on-failure
          delay: 30s
          max_attempts: 3  # Increased max attempts
          window: 120s  # Increased window

  metricbeat:
    image: "docker.elastic.co/beats/metricbeat:${ELASTIC_VERSION:-9.0.3}"
    user: root
    command:
      - -e
      - --system.hostfs=/hostfs
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
      - /proc:/hostfs/proc:ro
      - /:/hostfs:ro
    cap_add:
      - SYS_ADMIN
      - DAC_READ_SEARCH
    environment:
      METRICBEAT_INTERNAL_PASSWORD: ${METRICBEAT_INTERNAL_PASSWORD:-}
      MONITORING_INTERNAL_PASSWORD: ${MONITORING_INTERNAL_PASSWORD:-}
      BEATS_SYSTEM_PASSWORD: ${BEATS_SYSTEM_PASSWORD:-}
    secrets:
      - source: elk_ca_crt
        target: /usr/share/metricbeat/ca.crt
    configs:
      - source: metricbeat_yml
        target: /usr/share/metricbeat/metricbeat.yml
    networks:
      - elk
    deploy:
      mode: global
      placement:
        constraints:
          - node.role == manager
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

  filebeat:
    image: "docker.elastic.co/beats/filebeat:${ELASTIC_VERSION:-9.0.3}"
    user: root
    command:
      - -e
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    cap_add:
      - SYS_ADMIN
      - DAC_READ_SEARCH
    environment:
      FILEBEAT_INTERNAL_PASSWORD: ${FILEBEAT_INTERNAL_PASSWORD:-}
      BEATS_SYSTEM_PASSWORD: ${BEATS_SYSTEM_PASSWORD:-}
    secrets:
      - source: elk_ca_crt
        target: /usr/share/filebeat/ca.crt
    configs:
      - source: filebeat_yml
        target: /usr/share/filebeat/filebeat.yml
    networks:
      - elk
    deploy:
      mode: global
      placement:
        constraints:
          - node.role == manager
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

networks:
  elk:
    external: true

volumes:
  elasticsearch1:
  elasticsearch2:
  elasticsearch3:
  fleet-server:

secrets:
  elk_ca_crt:
    external: true
  elk_elasticsearch_crt:
    external: true
  elk_elasticsearch_key:
    external: true
  elk_kibana_crt:
    external: true
  elk_kibana_key:
    external: true
  elk_fleet_crt:
    external: true
  elk_fleet_key:
    external: true

configs:
  kibana_yml:
    external: true
  metricbeat_yml:
    external: true
  filebeat_yml:
    external: true
